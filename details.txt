You can use Power Shell or CMD as terminal

In PowerShell set this option if when using the virtual enviroment you get 
Activate.ps1 cannot be loaded

> Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope CurrentUser
> Get-ExecutionPolity





MAC				WINDOWS
ls				dir
pwd				echo %cd%
export = FLASK_APP=hello	$env:FLASK_APP = "hello.py" // set FLASK_APP=hello 


-------------------- INSTALLING THE VIRTUAL ENVIRONMENT -------------------
You can also use python -m venv myvenv as an alternative

			//Install pipenv in python
> pip3 install pipenv 	

			
			//Creates a virtual environment: pipfile, pifile.lock and an
				environment directory)
> pipenv install 	

			//To find out where the director is:
> pipenv shell 		//to activate the environment
> pipenv --venv 	//to get you the full path of the directory



			//Or To Crete it in the Project Folder, type before installation
> set PIPENV_VENV_IN_PROJECT=1 



		//To enter and exit the virtual environment
> pipenv shell
> exit


--------------------- SET THE Virtual ENV PYTHON .exe in VS CODE ---------



	You need to pick the python intepreter in the virtual environment!!!
	IN VS Code poin to the following directory
> pipenv shell 	
> pipenv --venv

The you will need to selct the /scripts/python.exe file inside
 this virutal environment as interpreter.
Flask has been installed only in the local environment, not the global one.


--------------------- INSTALLING FLASK IN THE VIRTUAL ENVIRONMENT ---------

> pipenv install flask
> pip list //show the installed packages


		/create a hello.py file

from flask import Flask
app = Flask(__name__)
print(__name__)

@app.route('/')
def index():
    return 'Hello, world!'

@app.route('/about')
def about():
    return 'This is the About page.'

if __name__ == '__main__':
    app.run()



			//Activate flask server

> pipenv shell
> flask --app hello.py:app run

or in Powershell: // in CMD

> pipenv shell
> $env:FLASK_APP = "hello.py" //set FLASK_APP=hello 
> flask run
> $env:FLASK_ENV="development" // set FLASK_ENV=development or production
> $env:FLASK_ENV //to see the value


			//DEPLOYMENT

create account on
	render.com	  //webhost
	github.com	  //Code Repository


[Optional] 
0.0 pip install gunicorn 	//This is required by render.com. You do not need to install localy, but you need to 					add it to requirements.txt


1. Upload files in Gifhub


1.1 The first time
	git init
	git add .
	git commit -m "Initial commit"
	git remote add origin <repository-url>
	git push -u origin master

1.2 To keep updating

	git add .
	git commit -m "Next Version Comment"
	git push origin master


// VERY IMPORTANT: urls are case sentitive so CSS and JS need to be in capital letters.
 

<link rel="stylesheet" href="{{ url_for('static', filename='CSS/style.css') }}" type="text/css" media="all"/>
    <script type="module" src="{{ url_for('static', filename='JS/script.mjs') }}"></script>
    

2. Deploy on render.com

create a web service = Settings
Name: urlshortner
Region: EUCentral
Repository: https://github.com/FamedBear16/urlshortnerPP
Branch: Master
Build Command: pip install -r requirements.txt		//Install all the dependency remove version numbers!
Start Command: gunicorn app:app                        //you need to have app.py with a app = Flask(__name__)



//CREATE requirements.txt 

1.1 pip freeze > requirements.txt  
    Remove all the version numbers and add Gunicor (if you have not installed it. It is required by the server)  
		blinker
		click
		colorama
		Flask
		itsdangerous
		Jinja2
		MarkupSafe
		Werkzeug
		Gunicorn



//OR Just type

2. Requiremnts.txt
	Flask
	Gunicorn

